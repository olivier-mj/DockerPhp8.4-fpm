name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      run: |
        git clone --depth=1 ${{ github.server_url }}/${{ github.repository }}.git .
        git checkout ${{ github.sha }}

    - name: Set up environment variables
      run: |
        # Variables de base
        echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/php8.4-fpm" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
        echo "BUILD_DATE_SHORT=$(date -u +'%Y%m%d')" >> $GITHUB_ENV
        echo "BUILD_TIMESTAMP=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
        echo "COMMIT_SHA_SHORT=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
        
        # DÃ©termination des tags selon le contexte
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "IMAGE_TAGS=${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:pr-${{ github.event.number }}" >> $GITHUB_ENV
          echo "IMAGE_TAGS=${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:pr-${{ github.event.number }},${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:commit-${GITHUB_SHA}" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "IMAGE_TAGS=${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:latest,${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:stable,${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:dev,${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:main-${GITHUB_SHA:0:8},${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:commit-${GITHUB_SHA},${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:$(date -u +'%Y%m%d'),${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
        else
          # Autres branches
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^a-zA-Z0-9._-]/-/g')
          echo "IMAGE_TAGS=${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:branch-${BRANCH_NAME},${{ secrets.DOCKER_USERNAME }}/php8.4-fpm:${BRANCH_NAME}-${GITHUB_SHA:0:8}" >> $GITHUB_ENV
        fi

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image with labels
      run: |
        docker build \
          --label "org.opencontainers.image.title=PHP 8.4 FPM Docker Image" \
          --label "org.opencontainers.image.description=PHP 8.4 FPM Docker Image" \
          --label "org.opencontainers.image.vendor=${{ github.repository_owner }}" \
          --label "org.opencontainers.image.created=${BUILD_DATE}" \
          --label "org.opencontainers.image.revision=${GITHUB_SHA}" \
          --label "org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}" \
          --label "org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}" \
          --label "org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/main/README.md" \
          --label "org.opencontainers.image.ref.name=${{ github.ref_name }}" \
          --label "org.opencontainers.image.version=${GITHUB_SHA:0:8}" \
          -f Dockerfile \
          -t temp-build-image \
          .

    - name: Tag and push images
      run: |
        # Conversion de la variable IMAGE_TAGS en tableau
        IFS=',' read -ra TAGS <<< "$IMAGE_TAGS"
        
        # Tag et push de chaque image
        for tag in "${TAGS[@]}"; do
          echo "Tagging and pushing: $tag"
          docker tag temp-build-image "$tag"
          docker push "$tag"
        done

    - name: Cleanup
      if: always()
      run: |
        docker logout
        docker rmi temp-build-image || true
